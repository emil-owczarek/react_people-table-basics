{"version":3,"sources":["pages/HomePage.tsx","components/Navigation/Navigation.tsx","pages/Root.tsx","pages/Error.tsx","components/Loader/Loader.tsx","api.ts","components/PeopleTable/PeopleTabe.tsx","pages/People.tsx","App.tsx","index.tsx"],"names":["Home","className","MainNavigation","role","isActive","classNames","to","RootLayout","ErrorPage","Loader","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleTable","people","currentSlug","useParams","slug","formatNameForURL","name","toLowerCase","replace","getBirthYearByName","peopleList","person","find","p","born","map","motherBirthYear","motherName","fatherBirthYear","fatherName","isCurrentPerson","sex","died","PeoplePage","useState","setPeople","loading","setLoading","error","setError","useEffect","data","catch","err","message","finally","length","router","createHashRouter","path","element","Root","errorElement","Error","children","People","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae858eeb.chunk.js","sourcesContent":["function Home() {\n  return <h1 className=\"title\">Home Page</h1>;\n}\n\nexport default Home;\n","/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nfunction MainNavigation() {\n  return (\n    <>\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => classNames('navbar-item', { 'has-background-grey-lighter': isActive })}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n            <NavLink\n              className={({ isActive }) => classNames('navbar-item', { 'has-background-grey-lighter': isActive })}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default MainNavigation;\n","import { Outlet } from 'react-router-dom';\nimport MainNavigation from '../components/Navigation/Navigation';\n\nfunction RootLayout() {\n  return (\n    <>\n      <div data-cy=\"app\">\n        <MainNavigation />\n        <main className=\"section\">\n          <div className=\"container\">\n            <Outlet />\n          </div>\n        </main>\n      </div>\n    </>\n  );\n}\n\nexport default RootLayout;\n","import MainNavigation from '../components/Navigation/Navigation';\n\nfunction ErrorPage() {\n  return (\n    <>\n      <MainNavigation />\n      <div className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title\">Page not found</h1>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ErrorPage;\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","/* eslint-disable max-len */\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface PeopleTableProps {\n  people: Person[];\n}\n\nfunction PeopleTable({ people }: PeopleTableProps) {\n  const { slug: currentSlug } = useParams<{ slug: string }>();\n\n  function formatNameForURL(name: string): string {\n    return name.toLowerCase().replace(/\\s+/g, '-');\n  }\n\n  function getBirthYearByName(name: string, peopleList: Person[]): number | null {\n    const person = peopleList.find(p => p.name === name);\n\n    return person ? person.born : null;\n  }\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n          <tbody>\n            {people.map(person => {\n              const motherBirthYear = person.motherName ? getBirthYearByName(person.motherName, people) : null;\n              const fatherBirthYear = person.fatherName ? getBirthYearByName(person.fatherName, people) : null;\n              const isCurrentPerson = `${formatNameForURL(person.name)}-${person.born}` === currentSlug;\n\n              return (\n                <tr key={person.name} data-cy=\"person\" className={isCurrentPerson ? 'has-background-warning' : ''}>\n                  <td>\n                    <Link\n                      to={`/people/${formatNameForURL(person.name)}-${person.born}`}\n                      className={person.sex === 'f' ? 'has-text-danger' : ''}\n                    >\n                      {person.name}\n                    </Link>\n                  </td>\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n                  <td>\n                    {person.motherName && motherBirthYear\n                      ? (\n                        <Link\n                          to={`/people/${formatNameForURL(person.motherName)}-${motherBirthYear}`}\n                          className=\"has-text-danger\"\n                        >\n                          {person.motherName}\n                        </Link>\n                      )\n                      : person.motherName || '-'}\n                  </td>\n                  <td>\n                    {person.fatherName && fatherBirthYear\n                      ? (\n                        <Link\n                          to={`/people/${formatNameForURL(person.fatherName)}-${fatherBirthYear}`}\n                        >\n                          {person.fatherName}\n                        </Link>\n                      )\n                      : person.fatherName || '-'}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n  );\n}\n\nexport default PeopleTable;\n","/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport PeopleTable from '../components/PeopleTable/PeopleTabe';\nimport { Person } from '../types';\n\nfunction PeoplePage() {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getPeople()\n      .then((data) => {\n        setPeople(data);\n      })\n      .catch((err) => {\n        setError(err.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  if (people.length === 0) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <PeopleTable people={people} />\n    </>\n  );\n}\n\nexport default PeoplePage;\n","import { Navigate, createHashRouter, RouterProvider } from 'react-router-dom';\nimport './App.scss';\nimport Home from './pages/HomePage';\nimport RootLayout from './pages/Root';\nimport ErrorPage from './pages/Error';\nimport People from './pages/People';\n\nconst router = createHashRouter([{\n  path: '/',\n  element: <RootLayout />,\n  errorElement: <ErrorPage />,\n  children: [\n    { path: '/', element: <Home /> },\n    { path: '/home', element: <Navigate to=\"/\" replace /> },\n    {\n      path: '/people',\n      element: <People />,\n      children: [\n        { path: ':slug', element: <People /> },\n      ],\n    },\n  ],\n}]);\n\nfunction App() {\n  return (\n\n    <>\n      <div data-cy=\"app\">\n        <RouterProvider router={router} />\n        ;\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}